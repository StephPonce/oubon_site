<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>Oubon × TikTok Demo</title>
  <style>
    body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:0;background:#0f1320;color:#eef}
    .wrap{max-width:880px;margin:40px auto;padding:24px}
    .card{background:#141a2a;border:1px solid #24304d;border-radius:14px;padding:24px;margin:16px 0}
    h1{margin:0 0 8px}
    .row{display:flex;gap:12px;flex-wrap:wrap;margin-top:16px}
    button,a.btn{border:0;border-radius:10px;padding:12px 16px;background:#5563ff;color:#fff;text-decoration:none;cursor:pointer}
    .muted{opacity:.75;font-size:.9rem}
    code{background:#0b0f1a;padding:2px 6px;border-radius:6px}
  </style>
</head>
<body>
  <div class="wrap">
    <h1>Oubon × TikTok Demo</h1>
    <p class="muted">Shows Login Kit + Upload flow used by Oubon Shop.</p>

    <div class="card">
      <h3>1) Login Kit</h3>
      <p>Click connect to start TikTok OAuth. Redirects back to <code>/demo/oauth.html</code>.</p>
      <div class="row">
        <a class="btn" id="connect">Connect TikTok</a>
        <button id="reset">Reset demo</button>
      </div>
      <p id="status" class="muted"></p>
    </div>

    <div class="card">
      <h3>2) Upload (mock)</h3>
      <p>Demonstrates the <code>video.upload</code> scope by simulating an upload step after login.</p>
      <div class="row">
        <button id="simulate-upload">Simulate Upload</button>
      </div>
      <p id="upload-msg" class="muted"></p>
    </div>

    <p class="muted">Need help? <a href="mailto:support@oubonshop.com">support@oubonshop.com</a></p>
  </div>

  <script>
    const clientKey   = "awfl4ben3ftbj54c";
    const redirectUri = "https://app.oubonshop.com/demo/oauth.html";
    const scope       = encodeURIComponent("user.info.basic,video.upload");
    const state       = "oub";

    const loginUrl = "https://www.tiktok.com/v2/auth/authorize/"
      + "?client_key="   + encodeURIComponent(clientKey)
      + "&response_type=code"
      + "&redirect_uri=" + encodeURIComponent(redirectUri)
      + "&scope="        + scope
      + "&state="        + encodeURIComponent(state);

    const statusEl = document.getElementById("status");
    const uploadEl = document.getElementById("upload-msg");

    function setStatus() {
      const connected = localStorage.getItem("tiktok_connected") === "1";
      statusEl.textContent = connected
        ? "Connected to TikTok (demo state). You can proceed to Upload."
        : "Not connected. Click Connect TikTok to start.";
    }
    setStatus();

    document.getElementById("connect").href = loginUrl;

    document.getElementById("reset").onclick = () => {
      localStorage.removeItem("tiktok_connected");
      setStatus();
      uploadEl.textContent = "";
    };

    document.getElementById("simulate-upload").onclick = () => {
      const connected = localStorage.getItem("tiktok_connected") === "1";
      if (!connected) {
        uploadEl.textContent = "Please connect TikTok first.";
        return;
      }
      uploadEl.textContent = "Pretending to upload… success! (scope: video.upload)";
    };
  </script>
</body>
</html>
